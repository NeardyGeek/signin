{"version":3,"sources":["base.js","components/Portfolio.js","components/Transaction.js","Auth.js","components/SignIn.js","components/Register.js","PrivateRoute.js","App.js","serviceWorker.js","index.js"],"names":["app","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","prefix","postfix","d","Date","t","getHours","getMinutes","Portfolio","uid","name","user","auth","currentUser","displayName","collection","doc","get","then","data","balence","txt","document","getElementById","innerHTML","querySnapshot","totalValue","forEach","value","currPrice","qty","id","res","useEffect","interval","setInterval","prevTotal","Number","getAttribute","url","priceRef","fetch","json","open","previousClose","diff","latestPrice","console","log","update","catch","html","newTotal","error","clearInterval","className","to","onClick","signOut","onSubmit","e","preventDefault","ticker","isInteger","alert","response","symbol","totalPrice","b","price","docRef","exists","owns","newQty","set","addToUsers","add","buyPrice","addToTrans","type","placeholder","Transaction","AuthContext","React","createContext","AuthProvider","children","useState","setCurrentUser","onAuthStateChanged","Provider","withRouter","history","handleSignIn","useCallback","event","a","target","elements","email","password","signInWithEmailAndPassword","push","useContext","handleRegister","createUserWithEmailAndPassword","result","updateProfile","PrivateRoute","RouteComponent","component","rest","render","routeProps","App","exact","path","SignIn","Register","Boolean","window","location","hostname","match","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0cb9a311.chunk.js","sourcesContent":["import * as firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport 'firebase/firestore';\r\n\r\n\r\nconst app = firebase.initializeApp({\r\n    apiKey: \"AIzaSyBYfOwyu_K-EWFKJISujZoGutkWheg3s-I\",\r\n    authDomain: \"stage2-assesment.firebaseapp.com\",\r\n    databaseURL: \"https://stage2-assesment.firebaseio.com\",\r\n    projectId: \"stage2-assesment\",\r\n    storageBucket: \"stage2-assesment.appspot.com\",\r\n    messagingSenderId: \"742525091732\",\r\n    appId: \"1:742525091732:web:58094b3ef98cb3f7cc1981\",\r\n    measurementId: \"G-CHETW44PBV\"\r\n});\r\n\r\nexport default app;\r\n","import React, { Component } from \"react\";\r\nimport app from \"../base\";\r\nimport { useEffect, useState } from \"react\";\r\nimport {\r\n    //BrowserRouter as Router,\r\n    //Switch,\r\n    //Route,\r\n    Link,\r\n    //useRouteMatch\r\n} from \"react-router-dom\";\r\nimport \"./Portfolio.css\";\r\n//import useInterval from \"./useInterval\";\r\n\r\n\r\nconst db = app.firestore();\r\nconst prefix = \"https://cloud.iexapis.com/stable/stock/\";\r\nconst postfix = \"/quote?token=pk_dea1eb58206b464980a892070dc07dad\";\r\nvar d = new Date();\r\nvar h = d.getHours();\r\nvar m = d.getMinutes() / 60;\r\nvar t = h + m;\r\n//var last = 3000;\r\n\r\nconst Portfolio = () => {\r\n\r\n\r\n    var user = app.auth().currentUser;\r\n    \r\n    var uid, name;\r\n    //var balence = user.balence;\r\n    name = user.displayName\r\n    uid = user.uid;\r\n\r\n\r\n    db.collection(\"users\").doc(uid).get().then(doc => {\r\n        let txt = \"cash - ($\" + doc.data().balence + \")\";\r\n        return txt;\r\n    }).then(txt => {\r\n        var cashRef = document.getElementById(\"cash\");\r\n        cashRef.innerHTML = txt;\r\n    })\r\n\r\n\r\n    function handleBuy(e) {\r\n\r\n        e.preventDefault();\r\n        let ticker = document.getElementById(\"ticker\").value;\r\n        var qty = Number(document.getElementById(\"qty\").value);\r\n        let url = prefix + ticker + postfix;\r\n        //let symbol, currPrice, openPrice;\r\n\r\n        if (!Number.isInteger(qty)) {\r\n            alert(\"share quantities must be whole number\");\r\n        }\r\n\r\n\r\n        fetch(url)\r\n            .then(response => {\r\n                return response.json();\r\n            })\r\n            .then(data => {\r\n\r\n                db.collection(\"users\").doc(uid).get().then(doc => {\r\n                    let symbol = data.symbol;\r\n                    let currPrice = data.latestPrice;\r\n                    let totalPrice = currPrice * qty;\r\n                    var balence = doc.data().balence;\r\n\r\n                    if (totalPrice > balence) {\r\n                        alert(\"you don't have enough balence\");\r\n                    }\r\n                    balence = balence - totalPrice;\r\n                    return [symbol, currPrice, balence];\r\n\r\n                }).then(res => {\r\n\r\n                    addToUsers(res[2], res[0], res[1], qty);\r\n                    addToTrans(res[0], res[1], qty);\r\n\r\n                }).catch(error => {\r\n                    console.log(error);\r\n                });\r\n\r\n\r\n            }).then(() => {\r\n\r\n                db.collection(\"users\").doc(uid).collection(\"tickers\").get()\r\n                    .then(querySnapshot => {\r\n\r\n\r\n                        querySnapshot.forEach(doc => {\r\n                            console.log(doc.id, doc.data().qty);\r\n                        });\r\n\r\n\r\n                    })\r\n\r\n            }).catch(error =>{\r\n                console.log(error);\r\n                alert(\"please enter valid symbol of the ticker!\");\r\n            })\r\n\r\n\r\n    }\r\n\r\n\r\n    function addToUsers(b, symbol, price, qty) {\r\n\r\n        var docRef = db.collection(\"users\").doc(uid).collection(\"tickers\").doc(symbol);\r\n\r\n        docRef.get().then(doc => {\r\n            if (doc.exists) {\r\n                let owns = doc.data().qty;\r\n                let newQty = Number(owns) + Number(qty);\r\n                docRef.set({\r\n                    currPrice: price,\r\n                    qty: newQty\r\n                })\r\n\r\n            } else {\r\n                docRef.set({\r\n                    currPrice: price,\r\n                    qty: qty\r\n\r\n                })\r\n            }\r\n        }).then(() => {\r\n            db.collection(\"users\").doc(uid).set({\r\n                balence: b\r\n            })\r\n        }).then(() => {\r\n\r\n            db.collection(\"users\").doc(uid).collection(\"tickers\").get()\r\n                .then(querySnapshot => {\r\n\r\n                    let txt = \"\";\r\n                    var prevTotal = Number(document.getElementById(\"totalvalue\").getAttribute(\"value\"));\r\n\r\n                    querySnapshot.forEach(doc => {\r\n                        let url = prefix + doc.id + postfix;\r\n                        var priceRef = db.collection(\"tickers\").doc(doc.id);\r\n                        fetch(url).then(res => {\r\n\r\n                            return res.json();\r\n\r\n                        }).then(data => {\r\n                            var open = 0;\r\n\r\n                            if (t >= 9.5 && t <= 16 && d !== 0 && d !== 6) {\r\n                                open = data.open;\r\n                            } else {\r\n                                open = data.previousClose;\r\n                            }\r\n\r\n                            var diff = data.latestPrice - open;\r\n\r\n                            console.log(diff);\r\n\r\n                            if (data.latestPrice > open) {\r\n                                priceRef.update({\r\n                                    \"currPrice\": data.latestPrice\r\n                                }).catch(() => {\r\n                                    console.log(\"yes\");\r\n                                })\r\n\r\n                                txt += \"<font color = 'green'>\";\r\n\r\n                            } else if (data.latestPrice < open) {\r\n                                priceRef.update({\r\n                                    \"currPrice\": data.latestPrice\r\n                                }).catch(() => {\r\n                                    console.log(\"yes\");\r\n                                })\r\n\r\n\r\n                                txt += \"<font color = 'red'>\";\r\n\r\n                            } else {\r\n\r\n                                txt += \"<font color = 'gray'>\";\r\n                            }\r\n\r\n                            return [txt, diff];\r\n\r\n                        }).then((res) => {\r\n\r\n                            var value = res[1] * doc.data().qty;\r\n\r\n                            var html = res[0];\r\n                            html += doc.id + \" - \" + doc.data().qty + \" ----------------- shares $\" + doc.data().currPrice + \"</font>\";\r\n                            //console.log(res[1]);\r\n                            return [html, value];\r\n\r\n                        }).then(res => {\r\n\r\n                            var newTotal = prevTotal + res[1];\r\n                            //console.log(prevTotal);\r\n                            document.getElementById('totalvalue').innerHTML = \"Portfolio (\" + newTotal + \")\";\r\n                            document.getElementById(doc.id).innerHTML = res[0];\r\n                            return res[1];\r\n\r\n                        }).then((res) => {\r\n\r\n                            console.log(res);\r\n\r\n                        }).catch(error => {\r\n                            console.log(error);\r\n                        })\r\n                    });\r\n\r\n                });\r\n\r\n\r\n\r\n        }).then(() => {\r\n            db.collection(\"users\").doc(uid).get().then(doc => {\r\n                let txt = \"cash - ($\" + doc.data().balence + \")\";\r\n                return txt;\r\n            }).then(txt => {\r\n                var cashRef = document.getElementById(\"cash\");\r\n                cashRef.innerHTML = txt;\r\n            })\r\n\r\n        }).catch(error => {\r\n            console.log(error);\r\n        })\r\n\r\n\r\n    }\r\n\r\n    function addToTrans(symbol, price, qty) {\r\n\r\n        db.collection(\"trans\").doc(uid).collection(\"historys\").add({\r\n            buyPrice: price,\r\n            ticker: symbol,\r\n            qty: qty\r\n        }).then(function (docRef) {\r\n            console.log(\"Document written with ID: \", docRef.id);\r\n        })\r\n            .catch(function (error) {\r\n                console.error(\"Error adding document: \", error);\r\n            });\r\n\r\n    }\r\n\r\n\r\n\r\n    db.collection(\"users\").doc(uid).collection(\"tickers\").get()\r\n        .then(querySnapshot => {\r\n            var totalValue = 0;\r\n            let txt = \"<ul>\";\r\n            querySnapshot.forEach(doc => {\r\n                var value = doc.data().currPrice * doc.data().qty;\r\n                totalValue = totalValue + value;\r\n                txt += \"<li id = '\" + doc.id + \"'><font color = 'gray'>\" + doc.id + \" - \" + doc.data().qty + \" ----------------- shares $\" + value + \"</font></li>\";\r\n            });\r\n            txt += \"</ul>\"\r\n            return [txt, totalValue];\r\n        }).then(res => {\r\n            let txt = \"<h1 id = 'totalvalue' value = ' \" + res[1] + \"'>Portfolio ($\" + res[1] + \")</h1>\";\r\n            var stocklist = document.getElementById(\"stockList\");\r\n            stocklist.innerHTML = txt + res[0];\r\n\r\n        })\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n\r\n\r\n        var interval = setInterval(() => {\r\n\r\n            db.collection(\"users\").doc(uid).collection(\"tickers\").get()\r\n                .then(querySnapshot => {\r\n\r\n                    let txt = \"\";\r\n                    var prevTotal = Number(document.getElementById(\"totalvalue\").getAttribute(\"value\"));\r\n\r\n                    querySnapshot.forEach(doc => {\r\n                        let url = prefix + doc.id + postfix;\r\n                        var priceRef = db.collection(\"tickers\").doc(doc.id);\r\n                        fetch(url).then(res => {\r\n\r\n                            return res.json();\r\n\r\n                        }).then(data => {\r\n                            var open = 0;\r\n\r\n                            if (t >= 9.5 && t <= 16 && d !== 0 && d !== 6) {\r\n                                open = data.open;\r\n                            } else {\r\n                                open = data.previousClose;\r\n                            }\r\n\r\n                            var diff = data.latestPrice - open;\r\n\r\n                            console.log(diff);\r\n\r\n                            if (data.latestPrice > open) {\r\n                                priceRef.update({\r\n                                    \"currPrice\": data.latestPrice\r\n                                }).catch(() => {\r\n                                    console.log(\"yes\");\r\n                                })\r\n\r\n                                txt += \"<font color = 'green'>\";\r\n\r\n                            } else if (data.latestPrice < open) {\r\n                                priceRef.update({\r\n                                    \"currPrice\": data.latestPrice\r\n                                }).catch(() => {\r\n                                    console.log(\"yes\");\r\n                                })\r\n\r\n\r\n                                txt += \"<font color = 'red'>\";\r\n\r\n                            } else {\r\n\r\n                                txt += \"<font color = 'gray'>\";\r\n                            }\r\n\r\n                            return [txt, diff];\r\n\r\n                        }).then((res) => {\r\n\r\n                            var value = res[1] * doc.data().qty;\r\n\r\n                            var html = res[0];\r\n                            html += doc.id + \" - \" + doc.data().qty + \" shares ----------------- $\" + doc.data().currPrice + \"</font>\";\r\n                            //console.log(res[1]);\r\n                            return [html, value];\r\n\r\n                        }).then(res => {\r\n\r\n                            var newTotal = prevTotal + res[1];\r\n                            //console.log(prevTotal);\r\n                            document.getElementById('totalvalue').innerHTML = \"Portfolio ($\" + newTotal + \")\";\r\n                            document.getElementById(doc.id).innerHTML = res[0];\r\n                            return res[1];\r\n\r\n                        }).then((res) => {\r\n\r\n                            console.log(res);\r\n\r\n                        })\r\n                            .catch(error => {\r\n                                console.log(error);\r\n                            })\r\n                    });\r\n\r\n                });\r\n\r\n        }, 5000);\r\n\r\n\r\n        return () => clearInterval(interval);\r\n\r\n    }, []);\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"header\">\r\n                <h1>hello {name} </h1>\r\n            </div>\r\n\r\n            <div className=\"top\">\r\n                <Link to=\"/\">Portfolio</Link> | <Link to=\"/transaction\">Transaction</Link>\r\n                <button onClick={() => app.auth().signOut()}>Sign out</button>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"column\">\r\n                    <h1 id=\"cash\" ></h1>\r\n                    <form onSubmit={handleBuy}>\r\n                        <label>\r\n                            Ticker\r\n            <input id=\"ticker\" type=\"text\" placeholder=\"Ticker\" />\r\n                        </label>\r\n                        <label>\r\n                            Qty\r\n            <input id=\"qty\" type=\"number\" placeholder=\"qty\" />\r\n                        </label>\r\n                        <button type=\"submit\">Buy</button>\r\n\r\n                    </form>\r\n                </div>\r\n                <div className=\"column\">\r\n                    <div id=\"stockList\"></div>\r\n                </div>\r\n            </div>\r\n        </>\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default Portfolio;\r\n\r\n","import React from \"react\";\r\nimport app from \"../base\";\r\nimport {\r\n    \r\n    \r\n    Link\r\n    \r\n  } from \"react-router-dom\";\r\n\r\n\r\n\r\nconst db = app.firestore();\r\n//var user = app.auth().currentUser;\r\n//var uid = user.uid;\r\n\r\nconst Transaction = () => {\r\n\r\n   \r\n    var user = app.auth().currentUser;\r\n    var uid = user.uid;\r\n\r\n    db.collection(\"trans\").doc(uid).collection(\"historys\").get()\r\n        .then(querySnapshot => {\r\n            let txt = \"<ul>\";\r\n            querySnapshot.forEach(doc => {\r\n                txt += \"<li>BUY (\" + doc.data().ticker + \") - \" + doc.data().qty + \" shares @ $\" + doc.data().buyPrice + \"</li>\";\r\n            });\r\n            txt += \"</ul>\"\r\n            return txt;\r\n        }).then(res => {\r\n            var translist = document.getElementById(\"translist\");\r\n            translist.innerHTML = res;\r\n        });\r\n\r\n        \r\n\r\n        return (\r\n            <>\r\n            <div className = \"top\">\r\n                <Link to= \"/\">Portfolio</Link> | <Link to=\"/transaction\">Transaction</Link>\r\n                <button onClick={() => app.auth().signOut()}>Sign out</button>\r\n            </div>\r\n            <div className = \"columnt\">\r\n                <h1>Transaction</h1>\r\n                <div id = \"translist\"></div>\r\n            </div>\r\n            </>\r\n          );\r\n\r\n}\r\n\r\nexport default Transaction;","import React, { useEffect, useState } from \"react\";\r\nimport app from \"./base.js\";\r\n\r\nexport const AuthContext = React.createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n\r\n  useEffect(() => {\r\n    app.auth().onAuthStateChanged(setCurrentUser);\r\n  }, []);\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        currentUser\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\n","import React, { useCallback, useContext } from \"react\";\r\nimport {\r\n    Link\r\n} from \"react-router-dom\";\r\nimport { withRouter, Redirect } from \"react-router\";\r\nimport app from \"../base\";\r\nimport { AuthContext } from \"../Auth\";\r\nimport \"./Form.css\";\r\n\r\nconst SignIn = ({ history }) => {\r\n    const handleSignIn = useCallback(\r\n        async event => {\r\n            event.preventDefault();\r\n            const { email, password } = event.target.elements;\r\n            try {\r\n                await app\r\n                    .auth()\r\n                    .signInWithEmailAndPassword(email.value, password.value);\r\n                history.push(\"/\", \"/transaction\");\r\n            } catch (error) {\r\n                alert(error);\r\n            }\r\n        },\r\n        [history]\r\n    );\r\n\r\n    const { currentUser } = useContext(AuthContext);\r\n\r\n    if (currentUser) {\r\n        return <Redirect to=\"/\" />;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            \r\n            <form onSubmit={handleSignIn}>\r\n            <h1>Sign in</h1>\r\n                <label>\r\n                    Email\r\n          <input name=\"email\" type=\"email\" placeholder=\"Email\" />\r\n                </label>\r\n                <label>\r\n                    Password\r\n          <input name=\"password\" type=\"password\" placeholder=\"Password\" />\r\n                </label>\r\n                <button type=\"submit\">Sign in</button>\r\n                <Link to = \"/register\">Don't have account? Click here to register</Link>\r\n            </form>\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default withRouter(SignIn);","import React, { useCallback } from \"react\";\r\nimport { withRouter } from \"react-router\";\r\nimport app from \"../base\";\r\nimport \"./Form.css\";\r\nimport {\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\nconst db = app.firestore();\r\n\r\n\r\n\r\nconst Register = ({ history }) => {\r\n  const handleRegister = useCallback(async event => {\r\n    event.preventDefault();\r\n    const { email, password } = event.target.elements;\r\n    try {\r\n      await app\r\n        .auth()\r\n        .createUserWithEmailAndPassword(email.value, password.value).then(result => {\r\n\r\n            result.user.updateProfile({\r\n                displayName: document.getElementById(\"name\").value\r\n            })\r\n            \r\n            return result;\r\n\r\n        }).then(res =>{\r\n           db.collection(\"users\").doc(res.user.uid).set({\r\n             balence: 5000\r\n           })\r\n        })\r\n\r\n    \r\n\r\n      history.push(\"/\");\r\n\r\n    } catch (error) {\r\n      alert(error);\r\n    }\r\n  }, [history]);\r\n\r\n\r\n  \r\n\r\n  return (\r\n    <div>\r\n      \r\n      <form onSubmit={handleRegister}>\r\n      <h1>Register</h1>\r\n        <label>\r\n          Name\r\n          <input id=\"name\" type=\"text\" placeholder=\"Name\" />\r\n        </label>\r\n        <label>\r\n          Email\r\n          <input name=\"email\" type=\"email\" placeholder=\"Email\" />\r\n        </label>\r\n        <label>\r\n          Password\r\n          <input name=\"password\" type=\"password\" placeholder=\"Password\" />\r\n        </label>\r\n        <button type=\"submit\">Register</button>\r\n        <Link to = \"/signin\">Have an account? Click here to start!</Link>\r\n        \r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(Register);","import React, { useContext } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { AuthContext } from \"./Auth\";\r\n\r\nconst PrivateRoute = ({ component: RouteComponent, ...rest }) => {\r\n  const {currentUser} = useContext(AuthContext);\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={routeProps =>\r\n        !!currentUser ? (\r\n          <RouteComponent {...routeProps} />\r\n        ) : (\r\n          <Redirect to={\"/signin\"} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\n\r\nexport default PrivateRoute","import React from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Portfolio from \"./components/Portfolio\";\nimport Transaction from \"./components/Transaction\";\nimport SignIn from \"./components/SignIn\";\nimport Register from \"./components/Register\";\nimport { AuthProvider } from \"./Auth\";\nimport PrivateRoute from \"./PrivateRoute\";\n\nconst App = () => {\n  \n  return (\n    <AuthProvider>\n      <Router>\n        <Switch>\n          <PrivateRoute exact path=\"/\" component={Portfolio} />\n          <PrivateRoute exact path=\"/transaction\" component={Transaction} />\n          <Route exact path=\"/signin\" component={SignIn} />\n          <Route exact path=\"/register\" component={Register} />\n        </Switch>\n      </Router>\n    </AuthProvider>\n  );\n};\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}